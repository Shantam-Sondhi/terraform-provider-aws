# Step 1: Convert AWS SDK v1 (core) to v2
@@
var x identifier
@@

-import "github.com/aws/aws-sdk-go/aws"
+import "github.com/aws/aws-sdk-go-v2/aws"
aws.x

@@
@@
-aws.BoolValue
+aws.ToBool

@@
@@
-aws.Float64Value
+aws.ToFloat64

@@
@@
-aws.Int64Value
+aws.ToInt64

@@
@@
-aws.StringValue
+aws.ToString

@@
var x identifier
@@
-aws.StringSlice([]string{x})
+[]string{x}

@@
var x identifier
@@
-aws.StringValueSlice(x)
+x

@@
var x identifier
@@
-aws.StringValueMap(x)
+x

# Step 2: Convert AWS SDK v1 (service) to v2
@@
var x identifier
@@
-import "github.com/aws/aws-sdk-go/service/{{ .GoV1Package }}"
+import "github.com/aws/aws-sdk-go-v2/service/{{ .GoV2Package }}"
{{ .GoV1Package }}.x

# 2a: Most types are in the service's types package so do a simple mass-substitution
# to get most things right
@@
var x identifier
@@
-{{ .GoV1Package }}.x
+awstypes.x

@@
var x identifier
@@
+import awstypes "github.com/aws/aws-sdk-go-v2/service/{{ .GoV2Package }}/types"
awstypes.x

@@
@@
-awstypes.{{ .GoV1ClientTypeName }}
+{{ .GoV2Package }}.Client

@@
@@
-{{ .GoV1ClientTypeName }}Conn
+{{ .GoV1ClientTypeName }}Client

# 2b: Types used for passing Input and Outputs to a service's CRUD operations
# remain in the main service package, so 'unconvert' these from 2a above
{{ $goV2Package := .GoV2Package }}
{{ range $typeName := .InputOutputTypes }}
@@
@@
-awstypes.{{ $typeName }}
+{{ $goV2Package }}.{{ $typeName }}
{{ end }}

{{ range $funcName := .ContextFunctions }}
@@
@@
-{{ $funcName }}WithContext
+{{ $funcName }}
{{ end }}

# gopatch doesn't understand generics yet. See https://github.com/uber-go/gopatch/issues/61.
# for now we do our best with some simple substitutions but this will leave
# tfresource.RetryWhenAWSErrMessageContains(...) still to convert to
# tfresource.RetryWhenIsAErrorMessageContains[](...)
{{- range $exceptionName := .Exceptions }}
@@
@@
-tfawserr.ErrCodeEquals(err, awstypes.ErrCode{{ $exceptionName }})
+errs.IsA[*awstypes.{{ $exceptionName }}](err)

@@
var x identifier
@@
-tfawserr.ErrMessageContains(err, awstypes.ErrCodeInvalidParameterValueException, x)
+errs.IsAErrorMessageContains[*awstypes.{{ $exceptionName }}](err, x)
{{ end }}

@@
var x identifier
@@
+import "github.com/hashicorp/terraform-provider-aws/internal/errs"
errs.x
